{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\socialsite\\\\SOCIALBOOK\\\\connect\\\\react-social\\\\src\\\\pages\\\\messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversations/Conversations\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { axiosInstance } from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger(_ref) {\n  _s();\n\n  let {\n    socket\n  } = _ref;\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket === null || socket === void 0 ? void 0 : socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, [socket]);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket === null || socket === void 0 ? void 0 : socket.current.on(\"getUsers\", users => {\n      setOnlineUsers(user.followings.filter(f => users.some(u => u.userId === f)));\n    });\n  }, [user]);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axiosInstance.get(\"/conversations/\" + user._id);\n        setConversations(res.data); //console.log(res)\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axiosInstance.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data); //console.log(res)\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket === null || socket === void 0 ? void 0 : socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n\n    try {\n      const res = await axiosInstance.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id,\n                  friend: m.sender !== user._id && m.sender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineUsers: onlineUsers,\n            currentId: user._id,\n            setCurrentChat: setCurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"3vYNZxE6QM4GEQ1LHseFF8ib4Aw=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["D:/js/socialsite/SOCIALBOOK/connect/react-social/src/pages/messenger/Messenger.jsx"],"names":["Topbar","Conversation","Message","ChatOnline","useContext","useEffect","useRef","useState","AuthContext","axiosInstance","Messenger","socket","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","user","scrollRef","current","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","users","followings","filter","f","some","u","userId","getConversations","res","get","_id","err","console","log","getMessages","handleSubmit","e","preventDefault","message","conversationId","receiverId","find","member","emit","post","scrollIntoView","behavior","map","c","m","target","value"],"mappings":"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","sourcesContent":["import \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversations/Conversations\";\r\nimport Message from \"../../components/message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { axiosInstance } from \"../../config\";\r\n\r\nexport default function Messenger({ socket }) {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const scrollRef = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    socket?.current.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    socket?.current.on(\"getUsers\", (users) => {\r\n      setOnlineUsers(\r\n        user.followings.filter((f) => users.some((u) => u.userId === f))\r\n      );\r\n    });\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axiosInstance.get(\"/conversations/\" + user._id);\r\n        setConversations(res.data);\r\n        //console.log(res)\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [user._id]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const res = await axiosInstance.get(\"/messages/\" + currentChat?._id);\r\n        setMessages(res.data);\r\n        //console.log(res)\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const message = {\r\n      sender: user._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member !== user._id\r\n    );\r\n\r\n    socket?.current.emit(\"sendMessage\", {\r\n      senderId: user._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      const res = await axiosInstance.post(\"/messages\", message);\r\n      setMessages([...messages, res.data]);\r\n      setNewMessage(\"\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <div className=\"messenger\">\r\n        <div className=\"chatMenu\">\r\n          <div className=\"chatMenuWrapper\">\r\n            <input placeholder=\"Search for friends\" className=\"chatMenuInput\" />\r\n            {conversations.map((c) => (\r\n              <div onClick={() => setCurrentChat(c)}>\r\n                <Conversation conversation={c} currentUser={user} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"chatBoxTop\">\r\n                  {messages.map((m) => (\r\n                    <div ref={scrollRef}>\r\n                      <Message message={m} own={m.sender === user._id} friend={m.sender !== user._id && m.sender} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    className=\"chatMessageInput\"\r\n                    placeholder=\"write something...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                  ></textarea>\r\n                  <button className=\"chatSubmitButton\" onClick={handleSubmit}>\r\n                    Send\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"noConversationText\">\r\n                Open a conversation to start a chat.\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatOnline\">\r\n          <div className=\"chatOnlineWrapper\">\r\n            <ChatOnline\r\n              onlineUsers={onlineUsers}\r\n              currentId={user._id}\r\n              setCurrentChat={setCurrentChat}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}