{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\socialsite\\\\SOCIALBOOK\\\\connect\\\\react-social\\\\src\\\\components\\\\post\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./post.css\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport React, { useState, useEffect } from \"react\";\nimport { format } from \"timeago.js\";\nimport { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport Cancel from '@mui/icons-material/Cancel';\nimport { axiosInstance } from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'relative',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  pt: 2,\n  px: 4,\n  pb: 3\n};\nexport default function Post(_ref) {\n  _s();\n\n  let {\n    post,\n    deletePost,\n    socket\n  } = _ref;\n  //console.log(post)\n  const [like, setLike] = useState(post.likes.length);\n  const [isLiked, setisLiked] = useState(false);\n  const [user, setUser] = useState({});\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const {\n    user: currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    setisLiked(post.likes.includes(currentUser._id));\n  }, [currentUser._id, post.likes]);\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axiosInstance.get(`/users?userId=${post.userId}`);\n      setUser(res.data);\n    };\n\n    fetchUser();\n  }, [post.userId]);\n\n  const likeHandler = async type => {\n    var _socket$current;\n\n    if (type === 1) {\n      try {\n        axiosInstance.put(\"/posts/\" + post._id + \"/like\", {\n          userId: currentUser._id\n        });\n      } catch (err) {}\n\n      setisLiked(!isLiked);\n      setLike(isLiked ? like - 1 : like + 1);\n    }\n\n    socket === null || socket === void 0 ? void 0 : (_socket$current = socket.current) === null || _socket$current === void 0 ? void 0 : _socket$current.emit(\"sendNotification\", {\n      senderName: currentUser.username,\n      receiverId: post.userId,\n      type: type ? type : 1\n    });\n  };\n\n  function handleDelete() {\n    try {\n      axiosInstance.put(`/posts/update/${post._id}`, {\n        userId: currentUser._id\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    deletePost();\n  }\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopLeft\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `Profile/${user.username}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"postProfileImg\",\n              src: user.profilePicture ? PF + user.profilePicture : PF + \"search.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postUserName\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postDate\",\n            children: format(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopRight\",\n          children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Modal, {\n              hideBackdrop: true,\n              open: isOpen,\n              onClose: handleClose,\n              \"aria-labelledby\": \"child-modal-title\",\n              \"aria-describedby\": \"child-modal-description\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: { ...style,\n                  width: 400\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  id: \"child-modal-title\",\n                  children: \"Do you want to delete this post?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"space-around\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: () => handleDelete(),\n                    children: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: handleClose,\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Cancel, {\n                  style: {\n                    position: \"absolute\",\n                    top: \"0%\",\n                    right: \"0%\"\n                  },\n                  onClick: handleClose\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n            onClick: handleOpen,\n            className: \"moreVert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postText\",\n          children: post === null || post === void 0 ? void 0 : post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"postImg\",\n          src: PF + post.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postBottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"likeIcon\",\n            src: `${PF}like.png`,\n            onClick: () => likeHandler(\"1\"),\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"heartIcon\",\n            src: `${PF}heart.png`,\n            onClick: () => likeHandler(\"2\"),\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"likeCounter\",\n            children: [like, \" people liked it\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomRight\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postCommentText\",\n            onClick: () => likeHandler(\"3\"),\n            children: [post.comment, \" comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"usNX2IXryfx0OQRWSfwhcXppEvQ=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/js/socialsite/SOCIALBOOK/connect/react-social/src/components/post/Post.jsx"],"names":["MoreVertIcon","React","useState","useEffect","format","Link","useContext","AuthContext","Box","Modal","Button","Cancel","axiosInstance","style","position","top","left","transform","width","bgcolor","border","boxShadow","pt","px","pb","Post","post","deletePost","socket","like","setLike","likes","length","isLiked","setisLiked","user","setUser","PF","process","env","REACT_APP_PUBLIC_FOLDER","currentUser","includes","_id","fetchUser","res","get","userId","data","likeHandler","type","put","err","current","emit","senderName","username","receiverId","handleDelete","console","log","isOpen","setIsOpen","handleOpen","handleClose","profilePicture","createdAt","display","justifyContent","right","desc","img","comment"],"mappings":"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","sourcesContent":["import \"./post.css\"\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { format } from \"timeago.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\"\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport Cancel from '@mui/icons-material/Cancel'\r\nimport { axiosInstance } from \"../../config\";\r\n\r\n\r\nconst style = {\r\n    position: 'relative',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    pt: 2,\r\n    px: 4,\r\n    pb: 3,\r\n};\r\n\r\nexport default function Post({ post, deletePost, socket }) {\r\n\r\n    //console.log(post)\r\n    const [like, setLike] = useState(post.likes.length);\r\n    const [isLiked, setisLiked] = useState(false);\r\n    const [user, setUser] = useState({});\r\n\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const { user: currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        setisLiked(post.likes.includes(currentUser._id))\r\n    }, [currentUser._id, post.likes])\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            const res = await axiosInstance.get(`/users?userId=${post.userId}`);\r\n            setUser(res.data);\r\n        }\r\n        fetchUser();\r\n    }, [post.userId])\r\n\r\n\r\n\r\n    const likeHandler = async (type) => {\r\n        if (type === 1) {\r\n            try {\r\n                axiosInstance.put(\"/posts/\" + post._id + \"/like\", { userId: currentUser._id })\r\n            } catch (err) {\r\n\r\n            }\r\n            setisLiked(!isLiked);\r\n            setLike(isLiked ? like - 1 : like + 1);\r\n        }\r\n\r\n        socket?.current?.emit(\"sendNotification\", {\r\n            senderName: currentUser.username,\r\n            receiverId: post.userId,\r\n            type: type ? type : 1,\r\n        })\r\n    };\r\n\r\n\r\n\r\n    function handleDelete() {\r\n        try {\r\n            axiosInstance.put(`/posts/update/${post._id}`, { userId: currentUser._id })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        deletePost();\r\n    }\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"postWrapper\">\r\n                <div className=\"postTop\">\r\n                    <div className=\"postTopLeft\">\r\n                        <Link to={`Profile/${user.username}`}>\r\n                            <img className=\"postProfileImg\" src={user.profilePicture ? PF + user.profilePicture : PF + \"search.png\"} alt=\"\" />\r\n                        </Link>\r\n                        <span className=\"postUserName\">{user.username}</span>\r\n                        <span className=\"postDate\">{format(post.createdAt)}</span>\r\n                    </div>\r\n                    <div className=\"postTopRight\">\r\n\r\n                        <React.Fragment>\r\n                            <Modal\r\n                                hideBackdrop\r\n                                open={isOpen}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"child-modal-title\"\r\n                                aria-describedby=\"child-modal-description\"\r\n                            >\r\n                                <Box sx={{ ...style, width: 400 }}>\r\n                                    <h2 id=\"child-modal-title\">Do you want to delete this post?</h2>\r\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                        <Button variant=\"outlined\" onClick={() => handleDelete()}>Yes</Button>\r\n                                        <Button variant=\"outlined\" onClick={handleClose}>No</Button>\r\n\r\n                                    </div>\r\n                                    <Cancel style={{ position: \"absolute\", top: \"0%\", right: \"0%\" }} onClick={handleClose} />\r\n                                </Box>\r\n                            </Modal>\r\n                        </React.Fragment>\r\n\r\n                        < MoreVertIcon onClick={handleOpen} className=\"moreVert\" />\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"postCenter\">\r\n                    <span className=\"postText\">\r\n                        {post?.desc}\r\n                    </span>\r\n                    <img className=\"postImg\" src={PF + post.img} alt=\"\" />\r\n\r\n                </div>\r\n                <div className=\"postBottom\">\r\n                    <div className=\"postBottomLeft\">\r\n                        <img className=\"likeIcon\" src={`${PF}like.png`} onClick={() => likeHandler(\"1\")} alt=\"\" />\r\n                        <img className=\"heartIcon\" src={`${PF}heart.png`} onClick={() => likeHandler(\"2\")} alt=\"\" />\r\n                        <span className=\"likeCounter\">{like} people liked it</span>\r\n                    </div>\r\n                    <div className=\"postBottomRight\">\r\n                        <span className=\"postCommentText\" onClick={() => likeHandler(\"3\")}>{post.comment} comments</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}