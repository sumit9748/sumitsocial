[{"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\index.js":"1","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\context\\AuthContext.js":"2","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\App.js":"3","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\context\\AuthReducer.js":"4","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\home\\Home.js":"5","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\register\\Register.jsx":"6","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\login\\Login.jsx":"7","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\messenger\\Messenger.jsx":"8","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\profile\\Profile.jsx":"9","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\tagUser\\TagUser.jsx":"10","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\updateProfile\\UpdateProfile.jsx":"11","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\config.js":"12","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\apiCalls.js":"13","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\leftbar\\Leftbar.jsx":"14","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\feed\\Feed.jsx":"15","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\topbar\\Topbar.jsx":"16","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\rightbar\\Rightbar.jsx":"17","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\chatOnline\\ChatOnline.jsx":"18","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\conversations\\Conversations.jsx":"19","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\message\\Message.jsx":"20","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\updateUser\\UpdateUser.jsx":"21","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\dummyData.js":"22","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\friends\\Friend.jsx":"23","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\post\\Post.jsx":"24","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\share\\Share.jsx":"25","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\status\\Status.jsx":"26","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\Firebase.js":"27","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\modal\\modalcomponent.js":"28"},{"size":418,"mtime":1671291226930,"results":"29","hashOfConfig":"30"},{"size":835,"mtime":1657792794979,"results":"31","hashOfConfig":"30"},{"size":1901,"mtime":1662302598241,"results":"32","hashOfConfig":"30"},{"size":1058,"mtime":1662723500289,"results":"33","hashOfConfig":"30"},{"size":623,"mtime":1668340029811,"results":"34","hashOfConfig":"30"},{"size":2780,"mtime":1661185829598,"results":"35","hashOfConfig":"30"},{"size":2523,"mtime":1668096141472,"results":"36","hashOfConfig":"30"},{"size":7022,"mtime":1668146716646,"results":"37","hashOfConfig":"30"},{"size":2684,"mtime":1660587001319,"results":"38","hashOfConfig":"30"},{"size":2010,"mtime":1660678883476,"results":"39","hashOfConfig":"30"},{"size":861,"mtime":1660568853426,"results":"40","hashOfConfig":"30"},{"size":472,"mtime":1671295753592,"results":"41","hashOfConfig":"30"},{"size":403,"mtime":1661186428868,"results":"42","hashOfConfig":"30"},{"size":3951,"mtime":1660644149781,"results":"43","hashOfConfig":"30"},{"size":1783,"mtime":1670947250298,"results":"44","hashOfConfig":"30"},{"size":4172,"mtime":1662728450686,"results":"45","hashOfConfig":"30"},{"size":4915,"mtime":1661439890410,"results":"46","hashOfConfig":"30"},{"size":1910,"mtime":1660586782252,"results":"47","hashOfConfig":"30"},{"size":1064,"mtime":1661455481221,"results":"48","hashOfConfig":"30"},{"size":993,"mtime":1660586862995,"results":"49","hashOfConfig":"30"},{"size":7013,"mtime":1668096421621,"results":"50","hashOfConfig":"30"},{"size":2027,"mtime":1657792794982,"results":"51","hashOfConfig":"30"},{"size":305,"mtime":1660586831199,"results":"52","hashOfConfig":"30"},{"size":8487,"mtime":1669284662651,"results":"53","hashOfConfig":"30"},{"size":3591,"mtime":1666081277175,"results":"54","hashOfConfig":"30"},{"size":1895,"mtime":1668530844547,"results":"55","hashOfConfig":"30"},{"size":589,"mtime":1660501151569,"results":"56","hashOfConfig":"30"},{"size":1457,"mtime":1657792794950,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h9bys7",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\index.js",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\context\\AuthContext.js",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\App.js",["124"],"import Home from \"./pages/home/Home\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Profile from \"./pages/profile/Profile\";\r\nimport Register from \"./pages/register/Register\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport Messenger from \"./pages/messenger/Messenger\";\r\nimport { UpdateProfile } from \"./pages/updateProfile/UpdateProfile\";\r\nimport TagUser from \"./components/tagUser/TagUser\";\r\nimport { io } from \"socket.io-client\";\r\n\r\n\r\nfunction App() {\r\n  const { user } = useContext(AuthContext);\r\n  const socket = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"https://socialbooksumit.herokuapp.com/\");\r\n  }, [])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    socket?.current.emit(\"addUser\", user?._id);\r\n  }, [socket, user])\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {user ? <Home socket={socket} /> : <Register />}\r\n        </Route>\r\n        <Route path=\"/login\">{user ? <Redirect to=\"/\" /> : <Login />}</Route>\r\n        <Route path=\"/register\">\r\n          {user ? <Redirect to=\"/\" /> : <Register />}\r\n        </Route>\r\n        <Route path=\"/messenger\">\r\n          {!user ? <Redirect to=\"/\" /> : <Messenger socket={socket} />}\r\n        </Route>\r\n        <Route path=\"/profile/:userId\">\r\n          <Profile />\r\n        </Route>\r\n        <Route path=\"/updateProfile/:userId\">\r\n          <UpdateProfile />\r\n        </Route>\r\n        <Route path=\"/searchUser\">\r\n          <TagUser />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//\"https://firebasestorage.googleapis.com/v0/b/socialmeo-c671e.appspot.com/o/images%2FIMG_20201230_123423.jpg63de8458-8392-4b87-8046-c66e2979b3b4?alt=media&token=f79eb8d9-61bf-4760-be4c-b754473f5a32\"","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\context\\AuthReducer.js",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\home\\Home.js",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\register\\Register.jsx",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\login\\Login.jsx",["125"],"import \"./login.css\";\r\nimport * as React from \"react\";\r\nimport { useRef, useContext } from \"react\";\r\nimport { loginCall } from \"../../apiCalls\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\n\r\nexport default function Login() {\r\n  const email = useRef();\r\n  const password = useRef();\r\n\r\n  const { error, isFetching, dispatch } = useContext(AuthContext);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    loginCall(\r\n      { email: email.current.value, password: password.current.value },\r\n      dispatch\r\n    );\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginLeft\">\r\n          <h3 className=\"loginLogo\">SocialBook</h3>\r\n          <span className=\"loginDesc\">\r\n            The Book helps to connect you with the world... SocialBook\r\n          </span>\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <form className=\"loginBox\" onSubmit={handleClick}>\r\n            <input\r\n              placeholder=\"email\"\r\n              type=\"email\"\r\n              required\r\n              className=\"loginInput\"\r\n              ref={email}\r\n            />\r\n            <input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              minLength=\"6\"\r\n              required\r\n              className=\"loginInput\"\r\n              ref={password}\r\n            />\r\n            <button className=\"loginButton\" disabled={isFetching}>\r\n              {isFetching ? (\r\n                <CircularProgress color=\"inherit\" size=\"20px\" />\r\n              ) : (\r\n                \"Log In\"\r\n              )}\r\n            </button>\r\n            <span className=\"loginForgot\">Forgot Password</span>\r\n            {open && (\r\n              <>\r\n                {error ? (\r\n                  <p style={{ color: \"red\" }}>something went wrong.</p>\r\n                ) : (\r\n                  <p style={{ color: \"green\" }}>Successfully logged in..</p>\r\n                )}\r\n              </>\r\n            )}\r\n            <button className=\"loginRegisterButton\" disabled={isFetching}>\r\n              {isFetching ? (\r\n                <CircularProgress color=\"inherit\" size=\"20px\" />\r\n              ) : (\r\n                \"create a new account\"\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\messenger\\Messenger.jsx",["126"],"import \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversations/Conversations\";\r\nimport Message from \"../../components/message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { axiosInstance } from \"../../config\";\r\nimport useWidth from \"../../config\";\r\n\r\nexport default function Messenger({ socket }) {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const { user } = useContext(AuthContext);\r\n  const width = useWidth();\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socket?.current.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    socket?.current?.emit(\"addUser\", user._id);\r\n\r\n    socket?.current.on(\"getUsers\", (users) => {\r\n      setOnlineUsers(\r\n        user.followings.filter((f) => users.some((u) => u.userId === f))\r\n      );\r\n    });\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axiosInstance.get(\"/conversations/\" + user._id);\r\n        setConversations(res.data);\r\n        //console.log(res)\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [user._id]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const res = await axiosInstance.get(\"/messages/\" + currentChat?._id);\r\n        setMessages(res.data);\r\n        //console.log(res)\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const message = {\r\n      sender: user._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n\r\n    const receiverId = currentChat?.members.find(\r\n      (member) => member !== user._id\r\n    );\r\n\r\n    socket?.current.emit(\"sendMessage\", {\r\n      senderId: user._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      const res = await axiosInstance.post(\"/messages\", message);\r\n      setMessages([...messages, res.data]);\r\n      setNewMessage(\"\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <div className=\"messenger\">\r\n        {width > 768 ? (\r\n          <>\r\n            <div className=\"chatMenu\">\r\n              <div className=\"chatMenuWrapper\">\r\n                <input\r\n                  placeholder=\"Search for friends\"\r\n                  className=\"chatMenuInput\"\r\n                />\r\n                {conversations.map((c) => (\r\n                  <div onClick={() => setCurrentChat(c)}>\r\n                    <Conversation conversation={c} currentUser={user} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chatBox\">\r\n              <div className=\"chatBoxWrapper\">\r\n                {currentChat ? (\r\n                  <>\r\n                    <div className=\"chatBoxTop\">\r\n                      {messages.map((m) => (\r\n                        <div ref={scrollRef}>\r\n                          <Message\r\n                            message={m}\r\n                            own={m.sender === user._id}\r\n                            friend={m.sender !== user._id && m.sender}\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"chatBoxBottom\">\r\n                      <textarea\r\n                        className=\"chatMessageInput\"\r\n                        placeholder=\"write something...\"\r\n                        onChange={(e) => setNewMessage(e.target.value)}\r\n                        value={newMessage}\r\n                      ></textarea>\r\n                      <button\r\n                        className=\"chatSubmitButton\"\r\n                        onClick={handleSubmit}\r\n                      >\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <span className=\"noConversationText\">\r\n                    Open a conversation to start a chat.\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chatOnline\">\r\n              <div className=\"chatOnlineWrapper\">\r\n                <ChatOnline\r\n                  onlineUsers={onlineUsers}\r\n                  currentId={user._id}\r\n                  setCurrentChat={setCurrentChat}\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {!currentChat ? (\r\n              <div className=\"chatMenuWrapper\">\r\n                <input\r\n                  placeholder=\"Search for friends\"\r\n                  className=\"chatMenuInput\"\r\n                />\r\n                {conversations.map((c) => (\r\n                  <div onClick={() => setCurrentChat(c)}>\r\n                    <Conversation conversation={c} currentUser={user} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"chatBoxWrapper\">\r\n                <div className=\"chatBoxTop\">\r\n                  {messages.map((m) => (\r\n                    <div ref={scrollRef}>\r\n                      <Message\r\n                        message={m}\r\n                        own={m.sender === user._id}\r\n                        friend={m.sender !== user._id && m.sender}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    className=\"chatMessageInput\"\r\n                    placeholder=\"write something...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                  ></textarea>\r\n                  <button className=\"chatSubmitButton\" onClick={handleSubmit}>\r\n                    Send\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\profile\\Profile.jsx",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\tagUser\\TagUser.jsx",["127","128"],"import React, { useContext, useState } from 'react'\r\nimport \"./tagUser.css\"\r\nimport { Avatar } from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Topbar from \"../topbar/Topbar\"\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { axiosInstance } from '../../config';\r\nconst TagUser = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [allusers, setAllusers] = useState([])\r\n    const { user: currentUser } = useContext(AuthContext);\r\n\r\n\r\n    useEffect(() => {\r\n        const getAll = async () => {\r\n            const res = await axiosInstance.get(\"/users/all\");\r\n            setAllusers(res.data.filter((r) => r._id !== currentUser._id));\r\n        }; getAll();\r\n    }, [search])\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        const res = allusers.filter((user) => user.username === search);\r\n        setAllusers(res);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Topbar />\r\n            <div classNameName='tagUser'>\r\n                <h1>Search Users</h1>\r\n                <form className='searchUserBody' onSubmit={handleChange}>\r\n                    <input className='searchuser' value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                    <button type=\"submit\" >search</button>\r\n                </form>\r\n                <div >\r\n                    {allusers?.map((all) => (\r\n                        <Link to={`/profile/${all._id}`} style={{ linkStyle: \"none\", textDecoration: \"none\" }}>  <div className='tagUserEdit'>\r\n                            <Avatar alt={all.username} src={all.profilePicture ? all.profilePicture : \"https://i.pinimg.com/736x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\"} />\r\n                            <a className=\"linksTag\">{all.username}</a>\r\n\r\n                        </div>\r\n                        </Link>\r\n\r\n                    ))}\r\n                </div>\r\n\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TagUser;","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\updateProfile\\UpdateProfile.jsx",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\config.js",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\apiCalls.js",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\leftbar\\Leftbar.jsx",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\feed\\Feed.jsx",["129"],"import { useContext, useEffect, useState } from \"react\";\r\nimport Post from \"../post/Post\";\r\nimport Share from \"../share/Share\";\r\nimport \"./feed.css\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { axiosInstance } from \"../../config\";\r\nimport Status from \"../../components/status/Status\";\r\n\r\nexport default function Feed({ username, socket }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const { user } = useContext(AuthContext);\r\n  const [status, setStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    fetchStatus();\r\n  }, [user]);\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const res = username\r\n        ? await axiosInstance.get(\"/posts/profile/\" + username)\r\n        : await axiosInstance.get(\"/posts/timeline/\" + user._id);\r\n      setPosts(\r\n        res.data.sort((p1, p2) => {\r\n          return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n        })\r\n      );\r\n    } catch (err) {}\r\n  };\r\n\r\n  const fetchStatus = async () => {\r\n    try {\r\n      const res = await axiosInstance.get(`/status/all/${user._id}`);\r\n      setStatus(res.data);\r\n    } catch (err) {}\r\n  };\r\n\r\n  function deletePost() {\r\n    fetchPosts();\r\n  }\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"feedWrapper\">\r\n        {!username && (\r\n          <div className=\"statusProvider\">\r\n            <Status create={true} user={user} fetchStatus={fetchStatus} />\r\n            {status?.map((s) => (\r\n              <Status create={false} user={user} status={s} />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {(!username || username === user.username) && <Share />}\r\n        {posts?.map((p) => (\r\n          <Post key={p._id} post={p} deletePost={deletePost} socket={socket} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\topbar\\Topbar.jsx",["130","131"],"import \"./topbar.css\";\r\nimport Person from \"@mui/icons-material/Person\";\r\nimport Chat from \"@mui/icons-material/Chat\";\r\nimport Notification from \"@mui/icons-material/Notifications\";\r\nimport Power from \"@mui/icons-material/PowerSettingsNewOutlined\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function Topbar({ text, setText, socket }) {\r\n\r\n  const { user } = useContext(AuthContext);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [opennot, setOpennot] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  useEffect(() => {\r\n    socket?.current?.on(\"getNotification\", (data) => {\r\n      setNotifications((prev) => [...prev, data]);\r\n    });\r\n  }, [socket]);\r\n\r\n\r\n\r\n  const displayNotification = ({ senderName, type, message }) => {\r\n    let action;\r\n\r\n    if (type == 1) {\r\n      action = \"liked\";\r\n    } else if (type == 2) {\r\n      action = \"loved\";\r\n    } else {\r\n      action = `commented \"${message} on\"`;\r\n    }\r\n    return (\r\n      <span className=\"notification\">{`${senderName} ${action} your post.`}</span>\r\n    );\r\n  };\r\n\r\n  const handleRead = () => {\r\n    setNotifications([]);\r\n    setOpennot(false);\r\n\r\n  };\r\n\r\n  const registerSubmit = (e) => {\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    history.push(\"/login\")\r\n    window.location.reload();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"topbar-container\">\r\n      <div className=\"topbarLeft\">\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <span className=\"logo\">SocialBook</span>\r\n        </Link>\r\n      </div>\r\n      <div className=\"topbarCenter\">\r\n        <div className=\"searchbar\">\r\n          <SearchIcon className=\"searchIcon\" />\r\n          <input placeholder=\"search for posts\" value={text} className=\"searchInput\" onChange={(e) => setText(e.target.value)} />\r\n        </div>\r\n      </div>\r\n      <div className=\"topbarRight\">\r\n        <div className=\"topbarLinks\">\r\n          <Link to=\"/\" style={{ linkStyle: \"none\", textDecoration: \"none\", color: \"white\" }}>\r\n            <span className=\"topbarLink\">Home</span>\r\n          </Link>\r\n          <Link to=\"/searchUser\" style={{ linkStyle: \"none\", textDecoration: \"none\", color: \"white\" }}>\r\n            <span className=\"topbarLink\">TimeLine</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"topbarIcons\">\r\n          <div className=\"topbarIconItem\">\r\n            <Link to=\"/searchUser\"><Person /></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"topbarIcons\">\r\n          <div className=\"topbarIconItem\">\r\n            <Link style={{ linkStyle: \"none\", textDecoration: \"none\", color: \"white\" }} to={`/messenger/${user._id}`}>\r\n              <Chat className=\"chatIcon\" />\r\n            </Link>\r\n            <span className=\"topbarIconBadge\">1</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"topbarIcons\">\r\n          <div className=\"topbarIconItem\">\r\n            <Notification onClick={() => setOpennot(true)} />\r\n            {notifications.length > 0 && (<span className=\"topbarIconBadge\">{notifications.length}</span>)}\r\n            {opennot && (\r\n              <div className=\"notifications\">\r\n                {notifications.map((n) => displayNotification(n))}\r\n                <button className=\"nButton\" onClick={handleRead()}>\r\n                  Mark as read\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"topbarIcons\">\r\n          <div className=\"topbarIconItem\">\r\n            <Power onClick={registerSubmit} />\r\n          </div>\r\n        </div>\r\n        <Link to={`/profile/${user._id}`}>\r\n          <img\r\n            src={\r\n              user.profilePicture\r\n                ? user.profilePicture\r\n                : \"https://i.pinimg.com/736x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\"\r\n            }\r\n            alt=\"\"\r\n            className=\"topbarImg\"\r\n          />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\rightbar\\Rightbar.jsx",["132"],"import \"./rightbar.css\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport Add from \"@mui/icons-material/Add\";\r\nimport Remove from \"@mui/icons-material/Remove\";\r\nimport { axiosInstance } from \"../../config\";\r\n\r\nexport default function Rightbar({ user, socket }) {\r\n  const [friends, setFriends] = useState([]);\r\n  const { user: currentUser, dispatch } = useContext(AuthContext);\r\n  //console.log(currentUser);\r\n  const [followed, setFollowed] = useState(\r\n    currentUser?.followings.includes(user?._id)\r\n  );\r\n  console.log(followed)\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const getFriends = async () => {\r\n      try {\r\n        const friendList = await axiosInstance.get(\"/users/friends/\" + user._id);\r\n        //console.log(friendList.data)\r\n        setFriends(friendList.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getFriends();\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    socket?.current?.on(\"getUsers\", (users) => {\r\n      setOnlineUsers(\r\n        currentUser.followings.filter((f) => users.some((u) => u.userId === f))\r\n      );\r\n    });\r\n  }, [currentUser]);\r\n\r\n  console.log(onlineUsers)\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      if (followed) {\r\n\r\n        await axiosInstance.put(`/users/unfollow/${user._id}`, {\r\n          userId: currentUser._id,\r\n        });\r\n        dispatch({ type: \"UNFOLLOW\", payload: user._id });\r\n      } else {\r\n        await axiosInstance.put(`/users/follow/${user._id}`, {\r\n          userId: currentUser._id,\r\n        });\r\n        socket?.current?.emit(\"friendRequest\", {\r\n          senderName: currentUser.username,\r\n          receiverId: user._id,\r\n        })\r\n        dispatch({ type: \"FOLLOW\", payload: user._id });\r\n      }\r\n      setFollowed(!followed);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const HomeRightbar = () => {\r\n\r\n    return (\r\n      <>\r\n        <div className=\"birthdayContainer\">\r\n          <img className=\"birthdayImg\" src=\"assets/birthday.png\" alt=\"\" />\r\n          <span className=\"birthdayText\">\r\n            <b>Soumita Ganguly</b> and <b>3 other friends</b> have a birhday\r\n            today.\r\n          </span>\r\n        </div>\r\n        <img className=\"rightbarAd\" src=\"assets/shortcut-1.png\" alt=\"\" />\r\n        <h4 className=\"rightbarTitle\">Online Friends</h4>\r\n        <ul className=\"rightbarFriendList\">\r\n          <ChatOnline onlineUsers={onlineUsers} currentId={currentUser._id} />\r\n        </ul>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const ProfileRightbar = () => {\r\n    return (\r\n      <>\r\n        {user.username !== currentUser.username && (\r\n          <button className=\"rightbarFollowButton\" onClick={handleClick}>\r\n            {followed ? \"Unfollow\" : \"Follow\"}\r\n            {followed ? <Remove /> : <Add />}\r\n          </button>\r\n        )}\r\n        <h4 className=\"rightbarTitle\">User information</h4>\r\n        <div className=\"rightbarInfo\">\r\n          <div className=\"rightbarInfoItem\">\r\n            <span className=\"rightbarInfoKey\">City:</span>\r\n            <span className=\"rightbarInfoValue\">{user.city}</span>\r\n          </div>\r\n          <div className=\"rightbarInfoItem\">\r\n            <span className=\"rightbarInfoKey\">From:</span>\r\n            <span className=\"rightbarInfoValue\">{user.from}</span>\r\n          </div>\r\n          <div className=\"rightbarInfoItem\">\r\n            <span className=\"rightbarInfoKey\">Relationship:</span>\r\n            <span className=\"rightbarInfoValue\">\r\n              {user.relationship === 1\r\n                ? \"Single\"\r\n                : user.relationship === 1\r\n                  ? \"Married\"\r\n                  : \"-\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <h4 className=\"rightbarTitle\">User friends</h4>\r\n        <div className=\"rightbarFollowings\">\r\n          {friends.map((friend) => (\r\n            <Link\r\n              to={\"/profile/\" + friend._id}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <div className=\"rightbarFollowing\">\r\n                <img\r\n                  src={\r\n                    friend.profilePicture\r\n                      ? friend.profilePicture\r\n                      : \"https://i.pinimg.com/736x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\"\r\n                  }\r\n                  alt=\"\"\r\n                  className=\"rightbarFollowingImg\"\r\n                />\r\n                <span className=\"rightbarFollowingName\">{friend.username}</span>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"rightbar\">\r\n      <div className=\"rightbarWrapper\">\r\n        {user ? <ProfileRightbar /> : <HomeRightbar />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\chatOnline\\ChatOnline.jsx",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\conversations\\Conversations.jsx",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\message\\Message.jsx",["133"],"import \"./message.css\";\r\nimport { format } from \"timeago.js\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { axiosInstance } from \"../../config\";\r\n\r\nexport default function Message({ message, own, friend }) {\r\n  const [friendst, setFriendst] = useState([])\r\n  const { user } = useContext(AuthContext)\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axiosInstance.get(`/users?userId=${friend && friend}`)\r\n      setFriendst(res.data)\r\n    }; getUser();\r\n  }, [])\r\n\r\n  return (\r\n    <div className={own ? \"message own\" : \"message\"}>\r\n      <div className=\"messageTop\">\r\n        <img\r\n          className=\"messageImg\"\r\n          src={own ? user.profilePicture : friendst.profilePicture}\r\n          alt=\"\"\r\n        />\r\n        <p className=\"messageText\">{message.text}</p>\r\n      </div>\r\n      <div className=\"messageBottom\">{format(message.createdAt)}</div>\r\n    </div>\r\n  );\r\n}","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\updateUser\\UpdateUser.jsx",["134","135"],"import \"./updateUser.css\";\r\nimport AddImage from \"@mui/icons-material/AddAPhoto\";\r\nimport Cancel from \"@mui/icons-material/Cancel\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { axiosInstance } from \"../../config\";\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport { storage } from \"../../pages/Firebase\";\r\n//import { useFormControl } from \"../../../../../expense-manager/client/node_modules/@mui/material\";\r\n\r\nexport const UpdateUser = ({}) => {\r\n  // console.log(user.username);user\r\n  const { user } = useContext(AuthContext);\r\n  const username = useRef();\r\n  const city = useRef();\r\n  const desc = useRef();\r\n  const password = useRef();\r\n  const relation = useRef();\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n\r\n  let relationship;\r\n\r\n  if (user.relationship === 1) {\r\n    relationship = \"single\";\r\n  } else if (user.relationship === 2) {\r\n    relationship = \"married\";\r\n  } else {\r\n    relationship = \"others\";\r\n  }\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  console.log(imageAsFile);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    let updatedUser = {\r\n      username: username.current.value ? username.current.value : user.username,\r\n      city: city.current.value ? city.current.value : user.city,\r\n      desc: desc.current.value ? desc.current.value : user.desc,\r\n      relation: relation.current.value\r\n        ? relation.current.value\r\n        : user.relationship,\r\n      userId: user._id,\r\n    };\r\n    if (file) {\r\n      const data = new FormData();\r\n      const FileName = file.name + Date.now();\r\n      data.append(\"name\", FileName);\r\n      data.append(\"file\", file);\r\n\r\n      const image = file;\r\n      console.log(file);\r\n      setImageAsFile((imageAsFile) => image);\r\n      const imgRef = ref(storage, `images/${file.name + Date.now()}`);\r\n\r\n      uploadBytes(imgRef, file).then(() => {\r\n        getDownloadURL(imgRef).then((url) => {\r\n          updatedUser.profilePicture = String(url);\r\n          axiosInstance.put(\"/users/\" + user._id, updatedUser).then(() => {\r\n            axiosInstance.get(`/users?userId=${user._id}`).then((res) => {\r\n              dispatch({ type: \"UPDATE_USER\", payload: res.data });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    } else {\r\n      axiosInstance.put(\"/users/\" + user._id, updatedUser).then(() => {\r\n        axiosInstance.get(`/users?userId=${user._id}`).then((res) => {\r\n          dispatch({ type: \"UPDATE_USER\", payload: res.data });\r\n        });\r\n      });\r\n    }\r\n\r\n    // window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"updateUser\">\r\n      <div className=\"updateUserWrapper\">\r\n        <div className=\"updateUserTop\">\r\n          <div className=\"updateUserTopLeft\">\r\n            <h1 className=\"userDetailsText\">User Details</h1>\r\n            <div className=\"updateUserItem\">\r\n              <label className=\"updateUserKey\">Username:-</label>\r\n              <span className=\"updateUserValue\">{user.username}</span>\r\n            </div>\r\n            <div className=\"updateUserItem\">\r\n              <label className=\"updateUserKey\">From:-</label>\r\n              <span className=\"updateUserValue\">{user.city}</span>\r\n            </div>\r\n            <div className=\"updateUserItem\">\r\n              <label className=\"updateUserKey\">Desc:-</label>\r\n              <span className=\"updateUserValue\">{user.desc}</span>\r\n            </div>\r\n            <div className=\"updateUserItem\">\r\n              <label className=\"updateUserKey\">RelationShip Stats:-</label>\r\n              <span className=\"updateUserValue\">{user.relationship}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"updateUserTopRight\">\r\n            <img\r\n              src={\r\n                user.profilePicture\r\n                  ? user.profilePicture\r\n                  : \"https://i.pinimg.com/736x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\"\r\n              }\r\n              alt=\"\"\r\n              className=\"imgContainer\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <hr className=\"updateHr\" />\r\n        <form className=\"updateUserBottom\" onSubmit={submitHandler}>\r\n          <div className=\"updateUserBottomLeft\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"change username..\"\r\n              className=\"inputChange\"\r\n              ref={username}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"change desc..\"\r\n              className=\"inputChange\"\r\n              ref={desc}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"change Address..\"\r\n              className=\"inputChange\"\r\n              ref={city}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"change Password..\"\r\n              className=\"inputChange\"\r\n              ref={password}\r\n            />\r\n            <div className=\"radioContainer\" id=\"relation\" ref={relation}>\r\n              <label className=\"input Label\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"1\"\r\n                  name=\"inputRadio\"\r\n                  value=\"1\"\r\n                  className=\"inputRadio\"\r\n                />\r\n                Single\r\n              </label>\r\n              <label className=\"input Label\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"2\"\r\n                  value=\"2\"\r\n                  name=\"inputRadio\"\r\n                  className=\"inputRadio\"\r\n                />\r\n                Married\r\n              </label>\r\n              <label className=\"input Label\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"3\"\r\n                  value=\"3\"\r\n                  name=\"inputRadio\"\r\n                  className=\"inputRadio\"\r\n                />\r\n                Complex\r\n              </label>\r\n            </div>\r\n            <button className=\"updateButton\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </div>\r\n\r\n          <label htmlFor=\"file\" className=\"updateUserBottomRight\">\r\n            {file && (\r\n              <div className=\"fileImgContainer\">\r\n                <img\r\n                  className=\"shareImg\"\r\n                  src={URL.createObjectURL(file)}\r\n                  alt=\"\"\r\n                />\r\n                <Cancel\r\n                  className=\"shareCancelImg\"\r\n                  onClick={() => setFile(null)}\r\n                />\r\n              </div>\r\n            )}\r\n            <input\r\n              type=\"file\"\r\n              id=\"file\"\r\n              style={{ display: \"none\" }}\r\n              accept=\".jpg,.jpeg,.png\"\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n            />\r\n            <AddImage className=\"registerIconAdd\" />\r\n          </label>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\dummyData.js",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\friends\\Friend.jsx",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\post\\Post.jsx",["136","137"],"import \"./post.css\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { format } from \"timeago.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Cancel from \"@mui/icons-material/Cancel\";\r\nimport { axiosInstance } from \"../../config\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\n\r\nconst style = {\r\n  position: \"relative\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  pt: 2,\r\n  px: 4,\r\n  pb: 3,\r\n};\r\n\r\nexport default function Post({ post, deletePost, socket }) {\r\n  //console.log(post)\r\n  const [like, setLike] = useState(post.likes.length);\r\n  const [isLiked, setisLiked] = useState(false);\r\n  const [user, setUser] = useState({});\r\n\r\n  const { user: currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    setisLiked(post.likes.includes(currentUser._id));\r\n  }, [currentUser._id, post.likes]);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [post]);\r\n\r\n  const fetchUser = async () => {\r\n    try {\r\n      const res = await axiosInstance.get(`/users?userId=${post.userId}`);\r\n      setUser(res.data);\r\n    } catch (err) {}\r\n  };\r\n  const likeHandler = async (type) => {\r\n    if (type === \"1\") {\r\n      try {\r\n        axiosInstance.put(\"/posts/\" + post._id + \"/like\", {\r\n          userId: currentUser._id,\r\n        });\r\n      } catch (err) {}\r\n      setisLiked(!isLiked);\r\n      setLike(isLiked ? like - 1 : like + 1);\r\n    }\r\n\r\n    socket?.current?.emit(\"sendNotification\", {\r\n      senderName: currentUser.username,\r\n      receiverId: post.userId,\r\n      type: type,\r\n    });\r\n  };\r\n\r\n  function handleDelete() {\r\n    try {\r\n      axiosInstance.put(`/posts/update/${post._id}`, {\r\n        userId: currentUser._id,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    deletePost();\r\n  }\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"postWrapper\">\r\n        <div className=\"postTop\">\r\n          <div className=\"postTopLeft\">\r\n            <Link to={`Profile/${user.username}`}>\r\n              <img\r\n                className=\"postProfileImg\"\r\n                src={\r\n                  user.profilePicture\r\n                    ? user.profilePicture\r\n                    : \"https://i.pinimg.com/736x/d9/56/9b/d9569bbed4393e2ceb1af7ba64fdf86a.jpg\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n            <span className=\"postUserName\">{user.username}</span>\r\n            <span className=\"postDate\">{format(post.createdAt)}</span>\r\n          </div>\r\n          <div className=\"postTopRight\">\r\n            <React.Fragment>\r\n              <Modal\r\n                hideBackdrop\r\n                open={isOpen}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"child-modal-title\"\r\n                aria-describedby=\"child-modal-description\"\r\n              >\r\n                <Box sx={{ ...style, width: 400 }}>\r\n                  <h2 id=\"child-modal-title\">\r\n                    Do you want to delete this post?\r\n                  </h2>\r\n                  <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-around\" }}\r\n                  >\r\n                    <Button variant=\"outlined\" onClick={() => handleDelete()}>\r\n                      Yes\r\n                    </Button>\r\n                    <Button variant=\"outlined\" onClick={handleClose}>\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                  <Cancel\r\n                    style={{ position: \"absolute\", top: \"0%\", right: \"0%\" }}\r\n                    onClick={handleClose}\r\n                  />\r\n                </Box>\r\n              </Modal>\r\n            </React.Fragment>\r\n\r\n            <MoreVertIcon onClick={handleOpen} className=\"moreVert\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"postCenter\">\r\n          <span className=\"postText\">{post?.desc}</span>\r\n          <img className=\"postImg\" src={post?.img ? post?.img : \"\"} alt=\"\" />\r\n        </div>\r\n        <div className=\"postBottom\">\r\n          <div className=\"postBottomLeft\">\r\n            <img\r\n              className=\"likeIcon\"\r\n              src={\"https://pngimg.com/uploads/like/small/like_PNG63.png\"}\r\n              onClick={() => likeHandler(\"1\")}\r\n              alt=\"\"\r\n            />\r\n            <img\r\n              className=\"heartIcon\"\r\n              src={\r\n                \"https://png.pngtree.com/png-vector/20220411/ourmid/pngtree-glossy-heart-best-vector-ai-and-png-png-image_4538478.png\"\r\n              }\r\n              onClick={() => likeHandler(\"2\")}\r\n              alt=\"\"\r\n            />\r\n            <span className=\"likeCounter\">{like} people liked it</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"postBottomRight\">\r\n          <span className=\"postCommentText\">\r\n            <AccordianComments\r\n              post={post}\r\n              socket={socket}\r\n              currentUser={currentUser}\r\n            />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const AccordianComments = ({ post, currentUser }) => {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const [comment, setComment] = useState(\"\");\r\n  const [com, setCom] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchComment();\r\n  }, [post]);\r\n\r\n  const fetchComment = async () => {\r\n    try {\r\n      const res = await axiosInstance.get(`/comment/allComment/${post._id}`);\r\n      setCom(res.data);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const sendComment = async () => {\r\n    try {\r\n      await axiosInstance.post(\"/comment/\", {\r\n        postId: post._id,\r\n        text: comment,\r\n        commenter: currentUser.username,\r\n        commenterPic: currentUser.profilePicture,\r\n      });\r\n      fetchComment();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={expanded === \"panel1\"}\r\n      sx={{ backgroundColor: \" black\", color: \"white\" }}\r\n      onChange={handleChange(\"panel1\")}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1bh-content\"\r\n        id=\"panel1bh-header\"\r\n      >\r\n        <Typography sx={{ width: \"33%\", flexShrink: 0, height: \"15%\" }}>\r\n          Comments\r\n        </Typography>\r\n        <Typography sx={{ color: \"text.secondary\" }}></Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div style={{ width: \"100%\" }}>\r\n          <input\r\n            type=\"text\"\r\n            style={{ display: \"flex\", width: \"90%\", margin: \"4px 2px\" }}\r\n            onChange={(e) => setComment(e.target.value)}\r\n          />\r\n          <button\r\n            style={{ marginBottom: \"20px\" }}\r\n            onClick={() => sendComment()}\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n        {com?.map((c) => (\r\n          <div className=\"comment\">\r\n            <div className=\"commentleft\">\r\n              <img\r\n                src={c?.commenterPic}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"25px\",\r\n                  height: \"25px\",\r\n                  borderRadius: \"50%\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n              <p style={{ fontSize: \"10px\", color: \"gray\" }}>\r\n                {format(c?.createdAt)}\r\n              </p>\r\n            </div>\r\n            <div className=\"commentright\">\r\n              <p>{c?.text}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n","D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\share\\Share.jsx",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\status\\Status.jsx",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\pages\\Firebase.js",[],"D:\\js\\socialsite\\SOCIALBOOK\\connect\\react-social\\src\\components\\modal\\modalcomponent.js",[],{"ruleId":"138","severity":1,"message":"139","line":11,"column":41,"nodeType":"140","messageId":"141","endLine":11,"endColumn":49},{"ruleId":"138","severity":1,"message":"142","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":46,"column":6,"nodeType":"145","endLine":46,"endColumn":12,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":21,"column":8,"nodeType":"145","endLine":21,"endColumn":16,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":43,"column":29,"nodeType":"151","endLine":43,"endColumn":53},{"ruleId":"143","severity":1,"message":"152","line":17,"column":6,"nodeType":"145","endLine":17,"endColumn":12,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":34,"column":14,"nodeType":"156","messageId":"157","endLine":34,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":36,"column":21,"nodeType":"156","messageId":"157","endLine":36,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":40,"column":6,"nodeType":"145","endLine":40,"endColumn":19,"suggestions":"158"},{"ruleId":"143","severity":1,"message":"159","line":18,"column":6,"nodeType":"145","endLine":18,"endColumn":8,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":12,"column":28,"nodeType":"163","messageId":"157","endLine":12,"endColumn":30},{"ruleId":"138","severity":1,"message":"164","line":31,"column":5,"nodeType":"140","messageId":"141","endLine":31,"endColumn":17},{"ruleId":"143","severity":1,"message":"165","line":47,"column":6,"nodeType":"145","endLine":47,"endColumn":12,"suggestions":"166"},{"ruleId":"143","severity":1,"message":"167","line":194,"column":6,"nodeType":"145","endLine":194,"endColumn":12,"suggestions":"168"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Snackbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has a missing dependency: 'currentUser._id'. Either include it or remove the dependency array.",["170"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'fetchPosts' and 'fetchStatus'. Either include them or remove the dependency array.",["171"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["172"],"React Hook useEffect has a missing dependency: 'friend'. Either include it or remove the dependency array.",["173"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'relationship' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'fetchComment'. Either include it or remove the dependency array.",["175"],{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [socket, user]",{"range":"190","text":"191"},"Update the dependencies array to be: [currentUser._id, search]",{"range":"192","text":"193"},"Update the dependencies array to be: [fetchPosts, fetchStatus, user]",{"range":"194","text":"195"},"Update the dependencies array to be: [currentUser, socket]",{"range":"196","text":"197"},"Update the dependencies array to be: [friend]",{"range":"198","text":"199"},"Update the dependencies array to be: [fetchUser, post]",{"range":"200","text":"201"},"Update the dependencies array to be: [fetchComment, post]",{"range":"202","text":"203"},[1654,1660],"[socket, user]",[759,767],"[currentUser._id, search]",[566,572],"[fetchPosts, fetchStatus, user]",[1312,1325],"[currentUser, socket]",[576,578],"[friend]",[1519,1525],"[fetchUser, post]",[6130,6136],"[fetchComment, post]"]